{"remainingRequest":"/Users/djones/Desktop/repos/wmstudies/node_modules/babel-loader/lib/index.js!/Users/djones/Desktop/repos/wmstudies/node_modules/eslint-loader/index.js??ref--14-0!/Users/djones/Desktop/repos/wmstudies/src/composables/getPosts.js","dependencies":[{"path":"/Users/djones/Desktop/repos/wmstudies/src/composables/getPosts.js","mtime":1644513054903},{"path":"/Users/djones/Desktop/repos/wmstudies/babel.config.js","mtime":1644353829891},{"path":"/Users/djones/Desktop/repos/wmstudies/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/djones/Desktop/repos/wmstudies/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/djones/Desktop/repos/wmstudies/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9kam9uZXMvRGVza3RvcC9yZXBvcy93bXN0dWRpZXMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5lcnJvci5jYXVzZS5qcyI7CmltcG9ydCB7IHJlZiB9IGZyb20gJ3Z1ZSc7Cgp2YXIgZ2V0UG9zdHMgPSBmdW5jdGlvbiBnZXRQb3N0cygpIHsKICB2YXIgcG9zdHMgPSByZWYoW10pOwogIHZhciBlcnJvciA9IHJlZihudWxsKTsKCiAgdmFyIGxvYWQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBkYXRhOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCdodHRwOi8vbG9jYWxob3N0OjMwMDAvcG9zdHMnKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgaWYgKGRhdGEub2spIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICB0aHJvdyBFcnJvcignbm8gZGF0YSBhdmFpbGFibGUnKTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICByZXR1cm4gZGF0YS5qc29uKCk7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgcG9zdHMudmFsdWUgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNTsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDExOwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgZXJyb3IudmFsdWUgPSBfY29udGV4dC50MC5tZXNzYWdlOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yLnZhbHVlKTsKCiAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgMTFdXSk7CiAgICB9KSk7CgogICAgcmV0dXJuIGZ1bmN0aW9uIGxvYWQoKSB7CiAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9OwogIH0oKTsKCiAgcmV0dXJuIHsKICAgIHBvc3RzOiBwb3N0cywKICAgIGVycm9yOiBlcnJvciwKICAgIGxvYWQ6IGxvYWQKICB9Owp9OwoKZXhwb3J0IGRlZmF1bHQgZ2V0UG9zdHM7"},{"version":3,"sources":["/Users/djones/Desktop/repos/wmstudies/src/composables/getPosts.js"],"names":["ref","getPosts","posts","error","load","fetch","data","ok","Error","json","value","message","console","log"],"mappings":";;;;AAAA,SAASA,GAAT,QAAoB,KAApB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,MAAMC,KAAK,GAAGF,GAAG,CAAC,EAAD,CAAjB;AACA,MAAMG,KAAK,GAAGH,GAAG,CAAC,IAAD,CAAjB;;AAEA,MAAMI,IAAI;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEQC,KAAK,CAAC,6BAAD,CAFb;;AAAA;AAELC,cAAAA,IAFK;;AAAA,kBAGJA,IAAI,CAACC,EAHD;AAAA;AAAA;AAAA;;AAAA,oBAIDC,KAAK,CAAC,mBAAD,CAJJ;;AAAA;AAAA;AAAA,qBAMWF,IAAI,CAACG,IAAL,EANX;;AAAA;AAMTP,cAAAA,KAAK,CAACQ,KANG;AAAA;AAAA;;AAAA;AAAA;AAAA;AASTP,cAAAA,KAAK,CAACO,KAAN,GAAc,YAAIC,OAAlB;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACO,KAAlB;;AAVS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAJN,IAAI;AAAA;AAAA;AAAA,KAAV;;AAcA,SAAO;AAAEF,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,KAAK,EAALA,KAAT;AAAgBC,IAAAA,IAAI,EAAJA;AAAhB,GAAP;AACH,CAnBD;;AAoBA,eAAeH,QAAf","sourcesContent":["import { ref } from 'vue'\n\nconst getPosts = () => {\n    const posts = ref([])\n    const error = ref(null)\n\n    const load = async () => {\n      try {\n        let data = await fetch('http://localhost:3000/posts')\n        if (!data.ok) {\n          throw Error('no data available')\n        }\n        posts.value = await data.json()\n      }\n      catch (err) {\n        error.value = err.message\n        console.log(error.value)\n      }\n    }\n\n    return { posts, error, load }\n}\nexport default getPosts"]}]}